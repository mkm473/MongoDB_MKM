30-01

show databases;

create database VIT;
drop database VIT;

use ViT;
create table CSE(
s_id int,
s_name varchar(30),
s_mark int
);

drop table cse;
show tables from VIT;

select  * from cse;

insert into cse values (1001,'Ram Prasad',99);
insert into cse values (1002,'Shubham',100);
insert into cse values (1003,'Anjali',95);
insert into cse values (1004,'Shubh',98);
insert into cse values (1005,'Palak',94);

alter table cse add(
s_contact int
);

desc cse;

alter table cse drop column s_contact;

alter table cse add(
s_country varchar(50) default 'India'
);

insert into cse values (1006,'Shubham Raj Sharma',98,'USA');

-------------------------------------------------------------

31-01

create database practicel;

 use practice1;
 create table Mech(s_id int,s_name varchar(25));

 START TRANSACTION;
 insert into Mech values (101, 'jayanth');
 SAVEPOINT A;
 update mech set s_id=102 where s_id=101;

 SAVEPOINT B; 
 insert into Mech values (103, 'Karthick');
 select * from mech;
 savepoint c;
 select*from mech;
 rollback to B;
 select * from mech;
 commit;

------------------------------------------------------------

01-04 Feb, 2025


CREATE TABLE Worker (

WORKER ID INT NOT NULL PRIMARY KEY AUTO INCREMENT,

FIRST NAME CHAR (25),

LAST NAME CHAR(25),

SALARY INT(15),

JOINING DATE DATETIME,

DEPARTMENT CHAR(25),

A Server Logs,
Options File,
PERFORMANCE,
Dashboard,
Performance Reports,
Performance Schema Setup,
INSERT INTO Worker,

(WORKER ID, FIRST NAME, LAST NAME, SALARY, JOINING DATE, DEPARTMENT)

VALUES,

(001, ontks', 'Arora, 100000, 14-02-2019.00.00),
(002, harika", "Verma, 80000, 14-05-11 09.00.00', 'Adain), 
(003, Vishal", Singhal", 200000, 14-02-26 00.00.00,),
(Singh, 500000, 14-02-28 08.00.00 Adein),
(005, vek, Thati, 500000, 14-06-11 09.00.00", "A"),
(006, Vipul, Diwan, 200009, 14-06-11 49.00.00", "Account),
(007, Satish Kumar, 75000, 14-01-20 500.00 Account),
(on, Geetika", "Chauhan, 30000, 14-04-11 03.00.00 Adain),

SELECT *FROM worker 
WHERE slary  not BETWEEN 100000 AND 200000;
slect first_Name from worker where 

SELECT FROM Worker WHERE SALARY=100000 AND DEPARTMENT = HRS

 SELECT FROM Worker WHERE SALARY > 200000;

 SELECT FROM Worker WHERE SALARY=100008 AND DEPARTMENTHR

 SELECT FROM Worker WHERE SALARY between 100000 AND 200000;

 SELECT FROM Worker WHERE SALARY not between 100000 AND 200000;

 SELECT FROM worker
 WHERE salary BETWEEN 200000 AND 400000
 AND WORKER ID in (1,2,3,4,5);
 desc worker;
 
use org123;
select * from worker;
slecct distinct (department) from worker;

SELECTworker_id , first_name , department ,

CASE

WHEN salary >3000000 THEN 'Rich people'

WHEN salary <= 300000 && salary >=100000THEN 'Middle stage '

ELSE 'poor people'

END

AS People_stage_wise

FROM worker;

select * from worker where department = 'Admin'order by department desc;

select department count(department) as total_employees from worker 
where department ='HR' or department 'Account' group by department;

select department ,count(department) as total_employees
FROM worker
GROUP BY department
ORDER BY total_employees DESC
LIMIT ALL;


select department ,count(department) as total_employees
FROM worker
GROUP BY department
ORDER BY total_employees DESC
LIMIT 1;

---------------------------------------------------------------------------

06 Feb,2025

create database org;

show databases;


use org123;
create table Persons(
ID int NOT NULL,
LastName varchar(255) NOT NULL,
FirstName varchar(255) NOT NULL,
Age int
);

desc persons;
ALTER TABLE Persons
modify AGE INT NOT NULL;

CREATE TABLE Persons1(
ID int Primary key,
LastName varchar(255) NOT NULL unique,
FirstName varchar(255) NOT NULL unique,
Age int
);
desc persons1;

--------------------------------------------------------------------------

07 Feb, 2025

create database org123;

use org123;

create table category(
c_id int primary key,
c_name varchar(25) not null unique,
c_decrp varchar(250) not null
);


insert into category values (102, 'furnitures','it stores all set of wooden items');

select * from category;
desc category;

CREATE TABLE Products(
P_ID int primary key,
p_Name varchar(250) NOT NULL,
c_id int,
constraint c_id foreign key (c_id)
references category(c_id)
);

desc products;

drop table products;

insert into products values(904,'Wooden table',null);

select * from products;

select* from category;

delete from category where c_id = 101;

drop table category;

--------------------------------------------------------------------------------------

08 Feb, 2025

show databases;
use org123;

create table Student(
sno int primary key,
sname varchar(20),
age int
);

insert into Student(sno,sname,age)
values (1,'Ankit',17),
(2,'Ramya',18),
(3,'Ram',16);

create table Course(
cno int primary key,
cname varchar(20)
);

select from Course;
insert into Course(cno,cname)
values(101,'c'),
(102,'c++'),
(103,'DBMS');

create table Enroll(
sno int,
cno int,
jdate date,
primary key (sno,cno),
foreign key(cno)
	references Course(cno)
	on delete cascade
);

insert into Enroll (sno,cno,jdate)
value (2,105,"2022/05/05");

select * from enroll;
desc enroll;

---------------------------------------------------------------------

09 Feb, 2025

CREATE TABLE Persons{
  ID int NOT NULL,
  LastName varchar(255) NOT NULL,
  FirstName varchar(255),
  Age int,
  CHECK (salary>=200000 and salar <= 400000)
);

ALTER TABLE Persons
ADD CHECK (Age >= 18);

CREATE TABLE Persons1 (
  ID int NOT NULL,
  LastName varchar(255) NOT NULL,
  FirstName varchar(255),
  Age int,
  City varchar(255) DEFAULT 'Coimbatore'
);

desc persons1;

use org123;
show table from org123;

select * from worker;

SELECT * FROM worker WHERE first_name LIKE '_i_a%';

SELECT * FROM worker WHERE salary LIKE '8%';

create view admin_more_salary as
select * from worker 
where departe = 'Admin' and salary >= 100000 order by salary desc;


select * from admin_more_salary;

-------------------------------------------------------------------------------

10 Feb, 2025

CREATE TABLE Persons{
  ID int NOT NULL,
  LastName varchar(255) NOT NULL,
  FirstName varchar(255),
  Age int,
  CHECK (salary>=200000 and salar <= 400000)
);

ALTER TABLE Persons
ADD CHECK (Age >= 18);

CREATE TABLE Persons1 (
  ID int NOT NULL,
  LastName varchar(255) NOT NULL,
  FirstName varchar(255),
  Age int,
  City varchar(255) DEFAULT 'Coimbatore'
);

desc persons1;

use org123;
show table from org123;

select * from worker;

SELECT * FROM worker WHERE first_name LIKE '_i_a%';

SELECT * FROM worker WHERE salary LIKE '8%';

create view admin_more_salary as
select * from worker 
where departe = 'Admin' and salary >= 100000 order by salary desc;


select * from admin_more_salary;

-------------------------------------------------------------------------------

11 Feb, 2025

use org123;

create table student(
  s_id int primary key,
  s_name varchar(25) not null,
  s_department varchar(25) not null
  );

insert into student values (1001, "Shubham","CSE"),(1002,"Joy","CSE"),(1003,"Ujjwal","CSE");

select * from student;


create table VIT(
  s_id int primary key,
  s_cgpa varchar(5) not null
  );

insert into vit values (1001,'8.2'),(1003,'8.5'),(1007,'9.5');
select * from vit;

use org123;

select * from student cross join vit;

select * from student INNER JOIN vit where student.s_id = vit.s_id;


select * from student NATURAL JOIN vit where student.s_id = vit.s_id;

select * from student LEFT JOIN vit ON (student.s_id = vit.s_id);

select * from student RIGHT JOIN vit ON (student.s_id = vit.s_id);

select * from student full JOIN vit;

select * from student FULL OUTER JOIN vit ON (student.s_id = vit.s_id);

-------------------------------------------------------------------------------

14 Feb, 2025

create database friday;
use friday;
show tables from friday;

create table student(id int, name varchar(20), location varchar(20));
insert into student values (101, 'Shubham','Samastipur'),(102,'Joy','Kolkata');

select *from student;

-------------------------------------------------------------------------------

15 Feb, 2025

create database saturday;
use saturday;
create table 'user'(
  'sl_no' INT(5) NULL DEFAULT NULL,
  'name' VARCHAR(100) NULL DEFAULT NULL,
  'email' VARCHAR(100) NULL DEFAULT NULL
);

select * from user;


create Database crud;
use crud;

create table user1(
  sl_no INT NULL DEFAULT NULL,
  name VARCHAR(100) NULL DEFAULT NULL,
  email VARCHAR(100) NULL DEFAULT NULL
  );

select * from user1

-------------------------------------------------------------------------------

24 Feb, 2025

show databases
admin                  40.00 KiB
config                 72.00 KiB
local                  96.00 KiB
orphanage_management  384.00 KiB
test                    8.00 KiB
vit                    24.00 KiB
use vit
switched to db vit
show databases
admin                  40.00 KiB
config                108.00 KiB
local                  96.00 KiB
orphanage_management  384.00 KiB
test                    8.00 KiB
vit                    24.00 KiB
db
vit
db.dropDatabase
[Function: dropDatabase] AsyncFunction {
  apiVersions: [ 1, Infinity ],
  returnsPromise: true,
  serverVersions: [ '0.0.0', '999.999.999' ],
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  returnType: { type: 'unknown', attributes: {} },
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}
db.dropDatabase()
{ ok: 1, dropped: 'vit' }
db
vit
use vit
already on db vit
use monday
switched to db monday
db.createCollection("Students")
{ ok: 1 }
db
monday
show collections
Students
db.createCollection("Results")
{ ok: 1 }
show collections
Results
Students
db.Results.drop()
true
show collections
Students
db.Students.insertOne({name:'Shubham V', location:'Samastipur'})
{
  acknowledged: true,
  insertedId: ObjectId('67d9b903726d52f6470e5b75')
}
db.Students.insertOne({name:'Shubham Raj Sharma', location:'Bihar'})
{
  acknowledged: true,
  insertedId: ObjectId('67d9b946726d52f6470e5b76')
}
db.Students.find()
{
  _id: ObjectId('67d9b903726d52f6470e5b75'),
  name: 'Shubham V',
  location: 'Samastipur'
}
{
  _id: ObjectId('67d9b946726d52f6470e5b76'),
  name: 'Shubham Raj Sharma',
  location: 'Bihar'
}
db.Students.deleteOne({name:'Shubham V'})
{acknowledged: true,
  insertedId: ObjectId('67d9b903726d52f6470e5b75')
}

-------------------------------------------------------------------------------

25 Feb, 2025

db
monday
db.Students.find().pretty()
{
  _id: ObjectId('67d9b946726d52f6470e5b76'),
  name: 'Shubham Raj Sharma',
  location: 'Bihar'
}
-- db.Students.updateOne({name:'Shubham Raj Sharma'}, {$set:{'name':'Shubh'})
-- SyntaxError: Unexpected token, expected "," (1:73)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39mupdateOne({name[33m:[39m[32m'Shubham Raj Sharma'[39m}[33m,[39m {$set[33m:[39m{[32m'name'[39m[33m:[39m[32m'Shubh'[39m})
--  [90m   |[39m                                                                          [31m[1m^[22m[39m[0m
-- db.Students.updateOne({'name':'Shubham Raj Sharma'}, {$set:{'name':'Shubh'})
-- SyntaxError: Unexpected token, expected "," (1:75)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39mupdateOne({[32m'name'[39m[33m:[39m[32m'Shubham Raj Sharma'[39m}[33m,[39m {$set[33m:[39m{[32m'name'[39m[33m:[39m[32m'Shubh'[39m})
--  [90m   |[39m                                                                            [31m[1m^[22m[39m[0m
-- db.Students.updateOne({'name':'Shubham Raj Sharma'} {$set:{'name':'Shubh'})
-- SyntaxError: Unexpected token, expected "," (1:52)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39mupdateOne({[32m'name'[39m[33m:[39m[32m'Shubham Raj Sharma'[39m} {$set[33m:[39m{[32m'name'[39m[33m:[39m[32m'Shubh'[39m})
--  [90m   |[39m                                                     [31m[1m^[22m[39m[0m
-- db.Students.updateOne({'name':'Shubham Raj Sharma'},{$set:{'name':'Shubh'})
-- SyntaxError: Unexpected token, expected "," (1:74)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39mupdateOne({[32m'name'[39m[33m:[39m[32m'Shubham Raj Sharma'[39m}[33m,[39m{$set[33m:[39m{[32m'name'[39m[33m:[39m[32m'Shubh'[39m})
--  [90m   |[39m                                                                           [31m[1m^[22m[39m[0m
-- db.Students.updateOne({name:'Shubham Raj Sharma'},{$set:{'name':'Shubh'})
-- SyntaxError: Unexpected token, expected "," (1:72)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39mupdateOne({name[33m:[39m[32m'Shubham Raj Sharma'[39m}[33m,[39m{$set[33m:[39m{[32m'name'[39m[33m:[39m[32m'Shubh'[39m})
--  [90m   |[39m                                                                         [31m[1m^[22m[39m[0m
db.Students.updateOne({name:'Shubham Raj Sharma'},{$set:{'name':'Shubh'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
db.Students.find()
{
  _id: ObjectId('67d9b946726d52f6470e5b76'),
  name: 'Shubh',
  location: 'Bihar'
}
db.Students.insertOne({})
{
  acknowledged: true,
  insertedId: ObjectId('67d9c0124528fa06b04ca584')
}
db.Students.insertOne({
-id :1,
name: "Joy"});
-- SyntaxError: Unexpected token (2:0)

-- [0m [90m 1 |[39m db[33m.[39m[33mStudents[39m[33m.[39minsertOne({
-- [31m[1m>[22m[39m[90m 2 |[39m [33m-[39mid [33m:[39m[35m1[39m[33m,[39m
--  [90m   |[39m [31m[1m^[22m[39m
--  [90m 3 |[39m name[33m:[39m [32m"Joy"[39m})[33m;[39m[0m
db.Students.insertOne({
_id :1,
name: "Joy"});
{
  acknowledged: true,
  insertedId: 1
}
db.Students.find()
{
  _id: ObjectId('67d9b946726d52f6470e5b76'),
  name: 'Shubh',
  location: 'Bihar'
}
{
  _id: ObjectId('67d9c0124528fa06b04ca584')
}
{
  _id: 1,
  name: 'Joy'
}
db.Students.insertOne({
_id :null,
name: "Ujjwal"});
{
  acknowledged: true,
  insertedId: ObjectId('67d9c0bd4528fa06b04ca585')
}
db.Students.insertOne({
_id :null,
name: "Shubham"});
{
  acknowledged: true,
  insertedId: ObjectId('67d9c0c34528fa06b04ca586')
}
db.Students.find()
{
  _id: ObjectId('67d9b946726d52f6470e5b76'),
  name: 'Shubh',
  location: 'Bihar'
}
{
  _id: ObjectId('67d9c0124528fa06b04ca584')
}
{
  _id: 1,
  name: 'Joy'
}
{
  _id: ObjectId('67d9c0bd4528fa06b04ca585'),
  name: 'Ujjwal'
}
{
  _id: ObjectId('67d9c0c34528fa06b04ca586'),
  name: 'Shubham'
}
db.Students.insertOne([
  {title:"NoSQL Distilled",isbn:"0-4696-7030-4"},
  {title:"NoSQL in 7 Days",isbn: "0-4086-6859-8"},
  {title:"NoSQL Database",isbn:"0-2504-6932-4"}]);
{
  acknowledged: true,
  insertedId: ObjectId('67d9c1a24528fa06b04ca587')
}
db.Students.drop()
true
db.Books.insertMany([
  {title:"NoSQL Distilled",isbn:"0-4696-7030-4"},
  {title:"NoSQL in 7 Days",isbn: "0-4086-6859-8"},
  {title:"NoSQL Database",isbn:"0-2504-6932-4"}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67d9c1d44528fa06b04ca588'),
    '1': ObjectId('67d9c1d44528fa06b04ca589'),
    '2': ObjectId('67d9c1d44528fa06b04ca58a')
  }
}
db.Books.find()
{
  _id: ObjectId('67d9c1d44528fa06b04ca588'),
  title: 'NoSQL Distilled',
  isbn: '0-4696-7030-4'
}
{
  _id: ObjectId('67d9c1d44528fa06b04ca589'),
  title: 'NoSQL in 7 Days',
  isbn: '0-4086-6859-8'
}
{
  _id: ObjectId('67d9c1d44528fa06b04ca58a'),
  title: 'NoSQL Database',
  isbn: '0-2504-6932-4'
}
db.Books.drop()
true
db.Books.insertOne([
  {title:"NoSQL Distilled",isbn:"0-4696-7030-4"},
  {title:"NoSQL in 7 Days",isbn: "0-4086-6859-8"},
  {title:"NoSQL Database",isbn:"0-2504-6932-4"}]);
{
  acknowledged: true,
  insertedId: ObjectId('67d9c2074528fa06b04ca58b')
}
db.Books.find()
{
  '0': {
    title: 'NoSQL Distilled',
    isbn: '0-4696-7030-4'
  },
  '1': {
    title: 'NoSQL in 7 Days',
    isbn: '0-4086-6859-8'
  },
  '2': {
    title: 'NoSQL Database',
    isbn: '0-2504-6932-4'
  },
  _id: ObjectId('67d9c2074528fa06b04ca58b')
}
monday

-------------------------------------------------------------------------------

27 Feb, 2025

show databases
admin                  40.00 KiB
config                108.00 KiB
local                  96.00 KiB
monday                112.00 KiB
orphanage_management  384.00 KiB
test                    8.00 KiB
use monday
switched to db monday
-- db.products.insertMany([
--   {"_id":1,"name":"xPhone","price":799,"releaseDate":ISODate("2011-05-14"),"spac":{"ram":4,"screen":6.5,"cpu":2.66},"color":["white","black"],"storage":[64,128,256]},
-- ])
-- MongoBulkWriteError: E11000 duplicate key error collection: monday.products index: _id_ dup key: { _id: 1 }
-- db.products.insertMany([
-- {"_id":2,"name":"xPhone","price":899,"releaseDate":ISODate("2011-09-01"),"spac":{"ram":16,"screen":9.5,"cpu":2.66},"color":["white","black","purple"],"storage":[128,256,512]},
-- {"_id":3,"name":"xTablet","price":899,"releaseDate":ISODate("2015-01-14"),"spac":{"ram":12,"screen":9.7,"cpu":3.66},"color":["blue"],"storage":[16,64,128]},
-- {"_id":4,"name":"SmartPad","price":699,"releaseDate":ISODate("2020-05-14"),"spac":{"ram":8,"screen":9.7,"cpu":1.66},"color":["white","orange","gold","gray"],"storage":[128,256,1024]},
-- {"_id":5,"name":"SmartPhone","price":599,"releaseDate":ISODate("2022-09-14"),"spac":{"ram":4,"screen":5.7,"cpu":1.66},"color":["white","orange","gold","gray"],"storage":[128,256]}
-- ])
-- MongoBulkWriteError: E11000 duplicate key error collection: monday.products index: _id_ dup key: { _id: 2 }
db.products.insertMany([
  {"_id":1,"name":"xPhone","price":799,"releaseDate":ISODate("2011-05-14"),"spac":{"ram":4,"screen":6.5,"cpu":2.66},"color":["white","black"],"storage":[64,128,256]},
])
{
  acknowledged: true,
  insertedIds: {
    '0': 1
  }
}
db.products.insertMany([
{"_id":2,"name":"xPhone","price":899,"releaseDate":ISODate("2011-09-01"),"spac":{"ram":16,"screen":9.5,"cpu":2.66},"color":["white","black","purple"],"storage":[128,256,512]},
{"_id":3,"name":"xTablet","price":899,"releaseDate":ISODate("2015-01-14"),"spac":{"ram":12,"screen":9.7,"cpu":3.66},"color":["blue"],"storage":[16,64,128]},
{"_id":4,"name":"SmartPad","price":699,"releaseDate":ISODate("2020-05-14"),"spac":{"ram":8,"screen":9.7,"cpu":1.66},"color":["white","orange","gold","gray"],"storage":[128,256,1024]},
{"_id":5,"name":"SmartPhone","price":599,"releaseDate":ISODate("2022-09-14"),"spac":{"ram":4,"screen":5.7,"cpu":1.66},"color":["white","orange","gold","gray"],"storage":[128,256]}
])
{
  acknowledged: true,
  insertedIds: {
    '0': 2,
    '1': 3,
    '2': 4,
    '3': 5
  }
}
show collections
Books
products
db.Books.drop()
true
show collections 
products
db.products.find(pretty)
ReferenceError: pretty is not defined
db.products.find().pretty()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xPhone',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spac: {
    ram: 16,
    screen: 9.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'xTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spac: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spac: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 5.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
db.products.findOne()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
db.products.findOne({'_id':2})
{
  _id: 2,
  name: 'xPhone',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spac: {
    ram: 16,
    screen: 9.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
db.products.findOne({'_id':3})
{
  _id: 3,
  name: 'xTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spac: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
db.products.findOne({'_id':4})
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spac: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
db.products.findOne({'_id':5})
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 5.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
db.products.findOne({'_id':5},{name:1})
{
  _id: 5,
  name: 'SmartPhone'
}
db.products.findOne({'_id':5},{name:1},{price:2})
{
  _id: 5,
  name: 'SmartPhone'
}
db.products.findOne({'_id':5},{price:2})
{
  _id: 5,
  price: 599
}
db.products.findOne({'_id':5},{storage:6})
{
  _id: 5,
  storage: [
    128,
    256
  ]
}
db.products.findOne({'_id':5},{name:1},{price:1})
{
  _id: 5,
  name: 'SmartPhone'
}
db.products.findOne({'_id':5},{name:1,price:-500})
{
  _id: 5,
  name: 'SmartPhone',
  price: 599
}
db.products.findOne({'_id':5})
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 5.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
db.Books.insertMany([
	{ "_id" : 1, "title" : "Unlocking Android", "isbn" : "1933988673", "categories" : [ "Open Source", "Mobile" ] },
	{ "_id" : 2, "title" : "Android in Action, Second Edition", "isbn" : "1935182722", "categories" : [ "Java" ] },
	{ "_id" : 3, "title" : "Specification by Example", "isbn" : "1617290084", "categories" : [ "Software Engineering" ] },
	{ "_id" : 4, "title" : "Flex 3 in Action", "isbn" : "1933988746", "categories" : [ "Internet" ] },
	{ "_id" : 5, "title" : "Flex 4 in Action", "isbn" : "1935182420", "categories" : [ "Internet" ] },
	{ "_id" : 6, "title" : "Collective Intelligence in Action", "isbn" : "1933988312", "categories" : [ "Internet" ] },
	{ "_id" : 7, "title" : "Zend Framework in Action", "isbn" : "1933988320", "categories" : [ "Web Development" ] },
	{ "_id" : 8, "title" : "Flex on Java", "isbn" : "1933988797", "categories" : [ "Internet" ] },
	{ "_id" : 9, "title" : "Griffon in Action", "isbn" : "1935182234", "categories" : [ "Java" ] },
	{ "_id" : 10, "title" : "OSGi in Depth", "isbn" : "193518217X", "categories" : [ "Java" ] },
	{ "_id" : 11, "title" : "Flexible Rails", "isbn" : "1933988509", "categories" : [ "Web Development" ] },
	{ "_id" : 13, "title" : "Hello! Flex 4", "isbn" : "1933988762", "categories" : [ "Internet" ] },
	{ "_id" : 14, "title" : "Coffeehouse", "isbn" : "1884777384", "categories" : [ "Miscellaneous" ] },
	{ "_id" : 15, "title" : "Team Foundation Server 2008 in Action", "isbn" : "1933988592", "categories" : [ "Microsoft .NET" ] },
	{ "_id" : 16, "title" : "Brownfield Application Development in .NET", "isbn" : "1933988711", "categories" : [ "Microsoft" ] },
	{ "_id" : 17, "title" : "MongoDB in Action", "isbn" : "1935182870", "categories" : [ "Next Generation Databases" ] },
	{ "_id" : 18, "title" : "Distributed Application Development with PowerBuilder 6.0", "isbn" : "1884777686", "categories" : [ "PowerBuilder" ] },
	{ "_id" : 19, "title" : "Jaguar Development with PowerBuilder 7", "isbn" : "1884777864", "categories" : [ "PowerBuilder", "Client-Server" ] },
	{ "_id" : 20, "title" : "Taming Jaguar", "isbn" : "1884777686", "categories" : [ "PowerBuilder" ] },
	{ "_id" : 21, "title" : "3D User Interfaces with Java 3D", "isbn" : "1884777902", "categories" : [ "Java", "Computer Graphics" ] },
	{ "_id" : 22, "title" : "Hibernate in Action", "isbn" : "193239415X", "categories" : [ "Java" ] },
	{ "_id" : 23, "title" : "Hibernate in Action (Chinese Edition)", "categories" : [ "Java" ] },
	{ "_id" : 24, "title" : "Java Persistence with Hibernate", "isbn" : "1932394885", "categories" : [ "Java" ] },
	{ "_id" : 25, "title" : "JSTL in Action", "isbn" : "1930110529", "categories" : [ "Internet" ] },
	{ "_id" : 26, "title" : "iBATIS in Action", "isbn" : "1932394826", "categories" : [ "Web Development" ] },
	{ "_id" : 27, "title" : "Designing Hard Software", "isbn" : "133046192", "categories" : [ "Object-Oriented Programming", "S" ] },
	{ "_id" : 28, "title" : "Hibernate Search in Action", "isbn" : "1933988649", "categories" : [ "Java" ] },
	{ "_id" : 29, "title" : "jQuery in Action", "isbn" : "1933988355", "categories" : [ "Web Development" ] },
	{ "_id" : 30, "title" : "jQuery in Action, Second Edition", "isbn" : "1935182323", "categories" : [ "Java" ] }
]);
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7,
    '7': 8,
    '8': 9,
    '9': 10,
    '10': 11,
    '11': 13,
    '12': 14,
    '13': 15,
    '14': 16,
    '15': 17,
    '16': 18,
    '17': 19,
    '18': 20,
    '19': 21,
    '20': 22,
    '21': 23,
    '22': 24,
    '23': 25,
    '24': 26,
    '25': 27,
    '26': 28,
    '27': 29,
    '28': 30
  }
}
db.Books.find()
{
  _id: 1,
  title: 'Unlocking Android',
  isbn: '1933988673',
  categories: [
    'Open Source',
    'Mobile'
  ]
}
{
  _id: 2,
  title: 'Android in Action, Second Edition',
  isbn: '1935182722',
  categories: [
    'Java'
  ]
}
{
  _id: 3,
  title: 'Specification by Example',
  isbn: '1617290084',
  categories: [
    'Software Engineering'
  ]
}
{
  _id: 4,
  title: 'Flex 3 in Action',
  isbn: '1933988746',
  categories: [
    'Internet'
  ]
}
{
  _id: 5,
  title: 'Flex 4 in Action',
  isbn: '1935182420',
  categories: [
    'Internet'
  ]
}
{
  _id: 6,
  title: 'Collective Intelligence in Action',
  isbn: '1933988312',
  categories: [
    'Internet'
  ]
}
{
  _id: 7,
  title: 'Zend Framework in Action',
  isbn: '1933988320',
  categories: [
    'Web Development'
  ]
}
{
  _id: 8,
  title: 'Flex on Java',
  isbn: '1933988797',
  categories: [
    'Internet'
  ]
}
{
  _id: 9,
  title: 'Griffon in Action',
  isbn: '1935182234',
  categories: [
    'Java'
  ]
}
{
  _id: 10,
  title: 'OSGi in Depth',
  isbn: '193518217X',
  categories: [
    'Java'
  ]
}
{
  _id: 11,
  title: 'Flexible Rails',
  isbn: '1933988509',
  categories: [
    'Web Development'
  ]
}
{
  _id: 13,
  title: 'Hello! Flex 4',
  isbn: '1933988762',
  categories: [
    'Internet'
  ]
}
{
  _id: 14,
  title: 'Coffeehouse',
  isbn: '1884777384',
  categories: [
    'Miscellaneous'
  ]
}
{
  _id: 15,
  title: 'Team Foundation Server 2008 in Action',
  isbn: '1933988592',
  categories: [
    'Microsoft .NET'
  ]
}
{
  _id: 16,
  title: 'Brownfield Application Development in .NET',
  isbn: '1933988711',
  categories: [
    'Microsoft'
  ]
}
{
  _id: 17,
  title: 'MongoDB in Action',
  isbn: '1935182870',
  categories: [
    'Next Generation Databases'
  ]
}
{
  _id: 18,
  title: 'Distributed Application Development with PowerBuilder 6.0',
  isbn: '1884777686',
  categories: [
    'PowerBuilder'
  ]
}
{
  _id: 19,
  title: 'Jaguar Development with PowerBuilder 7',
  isbn: '1884777864',
  categories: [
    'PowerBuilder',
    'Client-Server'
  ]
}
{
  _id: 20,
  title: 'Taming Jaguar',
  isbn: '1884777686',
  categories: [
    'PowerBuilder'
  ]
}
{
  _id: 21,
  title: '3D User Interfaces with Java 3D',
  isbn: '1884777902',
  categories: [
    'Java',
    'Computer Graphics'
  ]
}
Type "it" for more
db.Books.find({categories:'Java'},{title:10})
{
  _id: 2,
  title: 'Android in Action, Second Edition'
}
{
  _id: 9,
  title: 'Griffon in Action'
}
{
  _id: 10,
  title: 'OSGi in Depth'
}
{
  _id: 21,
  title: '3D User Interfaces with Java 3D'
}
{
  _id: 22,
  title: 'Hibernate in Action'
}
{
  _id: 23,
  title: 'Hibernate in Action (Chinese Edition)'
}
{
  _id: 24,
  title: 'Java Persistence with Hibernate'
}
{
  _id: 28,
  title: 'Hibernate Search in Action'
}
{
  _id: 30,
  title: 'jQuery in Action, Second Edition'
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xPhone',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spac: {
    ram: 16,
    screen: 9.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'xTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spac: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spac: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spac: {
    ram: 4,
    screen: 5.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
db.products.find({_id:1},{
name:1,
price:1,
"spec.screen":1
})
{
  _id: 1,
  name: 'xPhone',
  price: 799
}
db.products.find({},{
name:1,
"inventory.qty":1
})
{
  _id: 1,
  name: 'xPhone'
}
{
  _id: 2,
  name: 'xPhone'
}
{
  _id: 3,
  name: 'xTablet'
}
{
  _id: 4,
  name: 'SmartPad'
}
{
  _id: 5,
  name: 'SmartPhone'
}
db.products.find({_id:1},{
releaseDate:0,
spec:0,
storage:0
})
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  spac: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ]
}

-------------------------------------------------------------------------------

28 Feb, 2025

use monday
already on db monday
show collections
Books
products
db.Books.drop()
true
db.products.drop()
true
show collections
db.products.insertMany([
    { "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate": ISODate("2011-05-14"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 },"color":["white","black"],"storage":[64,128,256]},
    { "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate": ISODate("2011-09-01") , "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 },"color":["white","black","purple"],"storage":[128,256,512]},
    { "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate": ISODate("2015-01-14"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 },"color":["blue"],"storage":[16,64,128]},
    { "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate": ISODate("2020-05-14"),"spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 },"color":["white","orange","gold","gray"],"storage":[128,256,1024]},
    { "_id" : 5, "name" : "SmartPhone", "price" : 599,"releaseDate": ISODate("2022-09-14"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 },"color":["white","orange","gold","gray"],"storage":[128,256]}
 ])
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5
  }
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
-- db.products.find({price:{$eq:899},{name:1,price:1}})
-- SyntaxError: Unexpected token (1:34)

-- [0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39mproducts[33m.[39mfind({price[33m:[39m{$eq[33m:[39m[35m899[39m}[33m,[39m{name[33m:[39m[35m1[39m[33m,[39mprice[33m:[39m[35m1[39m}})
--  [90m   |[39m                                   [31m[1m^[22m[39m[0m
db.products.find({price:{$eq:899}},{name:1,price:1})
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899
}
db.products.find({"spec.ram":{$eq:4}},{name:1,"spec.ram":1})
{
  _id: 1,
  name: 'xPhone',
  spec: {
    ram: 4
  }
}
{
  _id: 5,
  name: 'SmartPhone',
  spec: {
    ram: 4
  }
}
db.products.find({
color:{
$eq:"blue"}}
,{name:1,
color:1})
{
  _id: 3,
  name: 'SmartTablet',
  color: [
    'blue'
  ]
}
db.products.find({
releaseDate:{
$eq: new ISODate("2020-05-14")
}
},{
name:1,
releaseDate:1
})
{
  _id: 4,
  name: 'SmartPad',
  releaseDate: 2020-05-14T00:00:00.000Z
}
db.products.find({price:{$in:[699,799]}},{name:1,price:1})
{
  _id: 1,
  name: 'xPhone',
  price: 799
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699
}
db.products.find({color:{$in:['green','white']}},{name:1,price:1})
{
  _id: 1,
  name: 'xPhone',
  price: 799
}
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599
}
db.products.find({
color:{
$in:[/^g+/,/^w+/]}}
,{name:1,
color:1
})
{
  _id: 1,
  name: 'xPhone',
  color: [
    'white',
    'black'
  ]
}
{
  _id: 2,
  name: 'xTablet',
  color: [
    'white',
    'black',
    'purple'
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ]
}
monday
Selection deleted

-------------------------------------------------------------------------------

 01 Mar, 2025

show databases
admin                  40.00 KiB
config                 60.00 KiB
local                  96.00 KiB
monday                 40.00 KiB
orphanage_management  384.00 KiB
test                    8.00 KiB
monday
ReferenceError: monday is not defined
use monday
switched to db monday
show collections
products
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : 599, "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] },
	{ "_id" : 6, "name" : "xWidget", "spec" : { "ram" : 64, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "black" ], "storage" : [ 1024 ] }
])
-- MongoBulkWriteError: E11000 duplicate key error collection: monday.products index: _id_ dup key: { _id: 1 }
monday

-------------------------------------------------------------------------------

 13 Mar, 2025

use vit
switched to db vit
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : 599, "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] },
	{ "_id" : 6, "name" : "xWidget", "spec" : { "ram" : 64, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "black" ], "storage" : [ 1024 ] },
	{ "_id" : 7, "name" : "xReader","price": null, "spec" : { "ram" : 64, "screen" : 6.7, "cpu" : 3.66 }, "color" : [ "black", "white" ], "storage" : [ 128 ] }
])
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7
  }
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
{
  _id: 6,
  name: 'xWidget',
  spec: {
    ram: 64,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'black'
  ],
  storage: [
    1024
  ]
}
{
  _id: 7,
  name: 'xReader',
  price: null,
  spec: {
    ram: 64,
    screen: 6.7,
    cpu: 3.66
  },
  color: [
    'black',
    'white'
  ],
  storage: [
    128
  ]
}
db.products.find({price:{$exists:true},name:1,price:1})
db.products.find({price:{$exists:true}},{name:1,price:1})
{
  _id: 1,
  name: 'xPhone',
  price: 799
}
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599
}
{
  _id: 7,
  name: 'xReader',
  price: null
}
db.products.find({price:{$exists:false}},{name:1,price:1})
{
  _id: 6,
  name: 'xWidget'
}
db.products.drop()
true
show collections
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : 599, "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] },
	{ "_id" : 6, "name" : "xWidget", "spec" : { "ram" : 64, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "black" ], "storage" : [ 1024 ] },
	{ "_id" : 7, "name" : "xReader","price": null, "spec" : { "ram" : 64, "screen" : 6.7, "cpu" : 3.66 }, "color" : [ "black", "white" ], "storage" : [ 128 ] }
])
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7
  }
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
{
  _id: 6,
  name: 'xWidget',
  spec: {
    ram: 64,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'black'
  ],
  storage: [
    1024
  ]
}
{
  _id: 7,
  name: 'xReader',
  price: null,
  spec: {
    ram: 64,
    screen: 6.7,
    cpu: 3.66
  },
  color: [
    'black',
    'white'
  ],
  storage: [
    128
  ]
}
db.products.drop()
true
show collections
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : "799", "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : NumberInt(899), "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : NumberLong(899), "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : [599, 699, 799], "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : ["599",699], "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] },
	{ "_id" : 6, "name" : "xWidget", "spec" : { "ram" : 64, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "black" ], "storage" : [ 1024 ] }
])
-- Warning: NumberLong: specifying a number as argument is deprecated and may lead to loss of precision, pass a string instead
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6
  }
}
show collections
products
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: '799',
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: [
    599,
    699,
    799
  ],
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ],
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
{
  _id: 6,
  name: 'xWidget',
  spec: {
    ram: 64,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'black'
  ],
  storage: [
    1024
  ]
}
db.products.find({
    price: {
        $type: "string"
    }
}, {
    name: 1,
    price: 1
})
{
  _id: 1,
  name: 'xPhone',
  price: '799'
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ]
}
db.products.find({
    price: {
        $type: 2
    }
}, {
    name: 1,
    price: 1
})
{
  _id: 1,
  name: 'xPhone',
  price: '799'
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ]
}
db.products.find({
    price: {
        $type: "number"
    }
}, {
    name: 1,
    price: 1
})
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899
}
{
  _id: 4,
  name: 'SmartPad',
  price: [
    599,
    699,
    799
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ]
}
db.products.find({
    price: {
        $type: "array"
    }
}, {
    name: 1,
    price: 1
})
{
  _id: 4,
  name: 'SmartPad',
  price: [
    599,
    699,
    799
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ]
}
db.products.find({
    price: {
        $type: ["number","string"]
    }
}, {
    name: 1,
    price: 1
})
{
  _id: 1,
  name: 'xPhone',
  price: '799'
}
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899
}
{
  _id: 4,
  name: 'SmartPad',
  price: [
    599,
    699,
    799
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: [
    '599',
    699
  ]
}
db.products.drop()
true
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : 599, "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] },
	{ "_id" : 6, "name" : "xWidget", "spec" : { "ram" : 64, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "black" ], "storage" : [ 1024 ] }
])
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6
  }
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
{
  _id: 6,
  name: 'xWidget',
  spec: {
    ram: 64,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'black'
  ],
  storage: [
    1024
  ]
}
db.products.find({
    color: {
        $size:2
    }
}, {
    name: 1,
    color: 1
})
{
  _id: 1,
  name: 'xPhone',
  color: [
    'white',
    'black'
  ]
}
db.products.drop()
true
db.products.insertMany([
	{ "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate" : ISODate("2011-05-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 }, "color" : [ "white", "black" ], "storage" : [ 64, 128, 256 ] },
	{ "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate" : ISODate("2011-09-01T00:00:00Z"), "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 }, "color" : [ "white", "black", "purple" ], "storage" : [ 128, 256, 512 ] },
	{ "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate" : ISODate("2015-01-14T00:00:00Z"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 }, "color" : [ "blue" ], "storage" : [ 16, 64, 128 ] },
	{ "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate" : ISODate("2020-05-14T00:00:00Z"), "spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256, 1024 ] },
	{ "_id" : 5, "name" : "SmartPhone", "price" : 599, "releaseDate" : ISODate("2022-09-14T00:00:00Z"), "spec" : { "ram" : 4, "screen" : 9.7, "cpu" : 1.66 }, "color" : [ "white", "orange", "gold", "gray" ], "storage" : [ 128, 256 ] }
])
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5
  }
}
db.products.find()
{
  _id: 1,
  name: 'xPhone',
  price: 799,
  releaseDate: 2011-05-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 6.5,
    cpu: 2.66
  },
  color: [
    'white',
    'black'
  ],
  storage: [
    64,
    128,
    256
  ]
}
{
  _id: 2,
  name: 'xTablet',
  price: 899,
  releaseDate: 2011-09-01T00:00:00.000Z,
  spec: {
    ram: 16,
    screen: 9.5,
    cpu: 3.66
  },
  color: [
    'white',
    'black',
    'purple'
  ],
  storage: [
    128,
    256,
    512
  ]
}
{
  _id: 3,
  name: 'SmartTablet',
  price: 899,
  releaseDate: 2015-01-14T00:00:00.000Z,
  spec: {
    ram: 12,
    screen: 9.7,
    cpu: 3.66
  },
  color: [
    'blue'
  ],
  storage: [
    16,
    64,
    128
  ]
}
{
  _id: 4,
  name: 'SmartPad',
  price: 699,
  releaseDate: 2020-05-14T00:00:00.000Z,
  spec: {
    ram: 8,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256,
    1024
  ]
}
{
  _id: 5,
  name: 'SmartPhone',
  price: 599,
  releaseDate: 2022-09-14T00:00:00.000Z,
  spec: {
    ram: 4,
    screen: 9.7,
    cpu: 1.66
  },
  color: [
    'white',
    'orange',
    'gold',
    'gray'
  ],
  storage: [
    128,
    256
  ]
}
db.products.find({color:{$all:["black","white"]}},{name:1,price:1})
{
  _id: 1,
  name: 'xPhone',
  price: 799
}
{
  _id: 2,
  name: 'xTablet',
  price: 899
}
db.products.find({color:{$all:["black","white"]}},{name:1,color:1})
{
  _id: 1,
  name: 'xPhone',
  color: [
    'white',
    'black'
  ]
}
{
  _id: 2,
  name: 'xTablet',
  color: [
    'white',
    'black',
    'purple'
  ]
}
db.products.find({
    $and:[{
color:"black"},
          {color:"white"}]
}, {
    name: 1,
    color: 1
})
{
  _id: 1,
  name: 'xPhone',
  color: [
    'white',
    'black'
  ]
}
{
  _id: 2,
  name: 'xTablet',
  color: [
    'white',
    'black',
    'purple'
  ]
}
vit

-------------------------------------------------------------------------------

